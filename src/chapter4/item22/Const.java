package chapter4.item22;

/**
 * 상수 인터페이스 -> 안티 패턴
 * 상수는 인터페이스가 아니라 유틸리티 클래스 or 열거형(enum)으로 정의하는 것이 바람직
 * 상수 인터페이스를 구현하면 API가 오염되며 유지보수성이 떨어짐
 *
 * 상수는 내부 구현인데, 인터페이스를 통해 외부에 노출된다.
 * 인터페이스를 구현한 모든 클래스가 불필요한 상수를 상속받는다.
 * 따라서 유지보수 시 불필요한 상수 변경이 어렵다.
 */

public interface Const {
    double A = 3.19999;
    double B = 9;
    double C = 1;
    double D = 1000.0101;
    double F = 5.555;
}
